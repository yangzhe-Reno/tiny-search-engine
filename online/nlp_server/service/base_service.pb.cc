// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base_service.proto

#include "base_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_base_5fservice_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SegmentResult;
}  // namespace protobuf_base_5fservice_2eproto
namespace NLP {
class SegmentResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SegmentResult>
      _instance;
} _SegmentResult_default_instance_;
class SegmentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SegmentRequest>
      _instance;
} _SegmentRequest_default_instance_;
class SegmentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SegmentResponse>
      _instance;
} _SegmentResponse_default_instance_;
class RecallRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecallRequest>
      _instance;
} _RecallRequest_default_instance_;
class RecallResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecallResponse>
      _instance;
} _RecallResponse_default_instance_;
class SortRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SortRequest>
      _instance;
} _SortRequest_default_instance_;
class SortResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SortResponse>
      _instance;
} _SortResponse_default_instance_;
}  // namespace NLP
namespace protobuf_base_5fservice_2eproto {
static void InitDefaultsSegmentResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NLP::_SegmentResult_default_instance_;
    new (ptr) ::NLP::SegmentResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NLP::SegmentResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SegmentResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSegmentResult}, {}};

static void InitDefaultsSegmentRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NLP::_SegmentRequest_default_instance_;
    new (ptr) ::NLP::SegmentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NLP::SegmentRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SegmentRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSegmentRequest}, {}};

static void InitDefaultsSegmentResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NLP::_SegmentResponse_default_instance_;
    new (ptr) ::NLP::SegmentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NLP::SegmentResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SegmentResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSegmentResponse}, {
      &protobuf_base_5fservice_2eproto::scc_info_SegmentResult.base,}};

static void InitDefaultsRecallRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NLP::_RecallRequest_default_instance_;
    new (ptr) ::NLP::RecallRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NLP::RecallRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecallRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecallRequest}, {}};

static void InitDefaultsRecallResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NLP::_RecallResponse_default_instance_;
    new (ptr) ::NLP::RecallResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NLP::RecallResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecallResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecallResponse}, {}};

static void InitDefaultsSortRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NLP::_SortRequest_default_instance_;
    new (ptr) ::NLP::SortRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NLP::SortRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SortRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSortRequest}, {
      &protobuf_base_5fservice_2eproto::scc_info_SegmentResult.base,}};

static void InitDefaultsSortResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NLP::_SortResponse_default_instance_;
    new (ptr) ::NLP::SortResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NLP::SortResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SortResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSortResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SegmentResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SegmentRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SegmentResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecallRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecallResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SortRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SortResponse.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SegmentResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SegmentResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SegmentResult, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SegmentResult, tf_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SegmentRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SegmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SegmentRequest, sentence_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SegmentResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SegmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SegmentResponse, result_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::RecallRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::RecallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::RecallRequest, tokens_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::RecallResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::RecallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::RecallResponse, docids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SortRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SortRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SortRequest, cut_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SortRequest, docids_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SortResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SortResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NLP::SortResponse, docids_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::NLP::SegmentResult)},
  { 9, 15, sizeof(::NLP::SegmentRequest)},
  { 16, 22, sizeof(::NLP::SegmentResponse)},
  { 23, 29, sizeof(::NLP::RecallRequest)},
  { 30, 36, sizeof(::NLP::RecallResponse)},
  { 37, 44, sizeof(::NLP::SortRequest)},
  { 46, 52, sizeof(::NLP::SortResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NLP::_SegmentResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NLP::_SegmentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NLP::_SegmentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NLP::_RecallRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NLP::_RecallResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NLP::_SortRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NLP::_SortResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "base_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022base_service.proto\022\003NLP\"*\n\rSegmentResu"
      "lt\022\r\n\005token\030\001 \002(\t\022\n\n\002TF\030\002 \002(\005\"\"\n\016Segment"
      "Request\022\020\n\010sentence\030\001 \002(\t\"5\n\017SegmentResp"
      "onse\022\"\n\006result\030\001 \003(\0132\022.NLP.SegmentResult"
      "\"\037\n\rRecallRequest\022\016\n\006tokens\030\001 \003(\t\" \n\016Rec"
      "allResponse\022\016\n\006DocIds\030\001 \003(\005\"E\n\013SortReque"
      "st\022&\n\ncut_result\030\001 \003(\0132\022.NLP.SegmentResu"
      "lt\022\016\n\006DocIds\030\002 \003(\005\"\036\n\014SortResponse\022\016\n\006Do"
      "cIds\030\001 \003(\0052B\n\016SegmentService\0220\n\003cut\022\023.NL"
      "P.SegmentRequest\032\024.NLP.SegmentResponse2B"
      "\n\rRecallService\0221\n\006recall\022\022.NLP.RecallRe"
      "quest\032\023.NLP.RecallResponse2:\n\013SortServic"
      "e\022+\n\004sort\022\020.NLP.SortRequest\032\021.NLP.SortRe"
      "sponseB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 531);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "base_service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_base_5fservice_2eproto
namespace NLP {

// ===================================================================

void SegmentResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SegmentResult::kTokenFieldNumber;
const int SegmentResult::kTFFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SegmentResult::SegmentResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fservice_2eproto::scc_info_SegmentResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NLP.SegmentResult)
}
SegmentResult::SegmentResult(const SegmentResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  tf_ = from.tf_;
  // @@protoc_insertion_point(copy_constructor:NLP.SegmentResult)
}

void SegmentResult::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tf_ = 0;
}

SegmentResult::~SegmentResult() {
  // @@protoc_insertion_point(destructor:NLP.SegmentResult)
  SharedDtor();
}

void SegmentResult::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SegmentResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SegmentResult::descriptor() {
  ::protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SegmentResult& SegmentResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fservice_2eproto::scc_info_SegmentResult.base);
  return *internal_default_instance();
}


void SegmentResult::Clear() {
// @@protoc_insertion_point(message_clear_start:NLP.SegmentResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    token_.ClearNonDefaultToEmptyNoArena();
  }
  tf_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SegmentResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NLP.SegmentResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NLP.SegmentResult.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 TF = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tf();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NLP.SegmentResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NLP.SegmentResult)
  return false;
#undef DO_
}

void SegmentResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NLP.SegmentResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NLP.SegmentResult.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // required int32 TF = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tf(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NLP.SegmentResult)
}

::google::protobuf::uint8* SegmentResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NLP.SegmentResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NLP.SegmentResult.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // required int32 TF = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tf(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NLP.SegmentResult)
  return target;
}

size_t SegmentResult::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NLP.SegmentResult)
  size_t total_size = 0;

  if (has_token()) {
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_tf()) {
    // required int32 TF = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tf());
  }

  return total_size;
}
size_t SegmentResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NLP.SegmentResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required int32 TF = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tf());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SegmentResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NLP.SegmentResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SegmentResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SegmentResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NLP.SegmentResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NLP.SegmentResult)
    MergeFrom(*source);
  }
}

void SegmentResult::MergeFrom(const SegmentResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NLP.SegmentResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      tf_ = from.tf_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SegmentResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NLP.SegmentResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SegmentResult::CopyFrom(const SegmentResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NLP.SegmentResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SegmentResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SegmentResult::Swap(SegmentResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SegmentResult::InternalSwap(SegmentResult* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tf_, other->tf_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SegmentResult::GetMetadata() const {
  protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SegmentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SegmentRequest::kSentenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SegmentRequest::SegmentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fservice_2eproto::scc_info_SegmentRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NLP.SegmentRequest)
}
SegmentRequest::SegmentRequest(const SegmentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sentence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sentence()) {
    sentence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sentence_);
  }
  // @@protoc_insertion_point(copy_constructor:NLP.SegmentRequest)
}

void SegmentRequest::SharedCtor() {
  sentence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SegmentRequest::~SegmentRequest() {
  // @@protoc_insertion_point(destructor:NLP.SegmentRequest)
  SharedDtor();
}

void SegmentRequest::SharedDtor() {
  sentence_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SegmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SegmentRequest::descriptor() {
  ::protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SegmentRequest& SegmentRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fservice_2eproto::scc_info_SegmentRequest.base);
  return *internal_default_instance();
}


void SegmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NLP.SegmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sentence_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SegmentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NLP.SegmentRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sentence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sentence()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sentence().data(), static_cast<int>(this->sentence().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NLP.SegmentRequest.sentence");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NLP.SegmentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NLP.SegmentRequest)
  return false;
#undef DO_
}

void SegmentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NLP.SegmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sentence = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sentence().data(), static_cast<int>(this->sentence().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NLP.SegmentRequest.sentence");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sentence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NLP.SegmentRequest)
}

::google::protobuf::uint8* SegmentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NLP.SegmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sentence = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sentence().data(), static_cast<int>(this->sentence().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NLP.SegmentRequest.sentence");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sentence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NLP.SegmentRequest)
  return target;
}

size_t SegmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NLP.SegmentRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string sentence = 1;
  if (has_sentence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sentence());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SegmentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NLP.SegmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SegmentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SegmentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NLP.SegmentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NLP.SegmentRequest)
    MergeFrom(*source);
  }
}

void SegmentRequest::MergeFrom(const SegmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NLP.SegmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sentence()) {
    set_has_sentence();
    sentence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sentence_);
  }
}

void SegmentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NLP.SegmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SegmentRequest::CopyFrom(const SegmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NLP.SegmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SegmentRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SegmentRequest::Swap(SegmentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SegmentRequest::InternalSwap(SegmentRequest* other) {
  using std::swap;
  sentence_.Swap(&other->sentence_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SegmentRequest::GetMetadata() const {
  protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SegmentResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SegmentResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SegmentResponse::SegmentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fservice_2eproto::scc_info_SegmentResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NLP.SegmentResponse)
}
SegmentResponse::SegmentResponse(const SegmentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      result_(from.result_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NLP.SegmentResponse)
}

void SegmentResponse::SharedCtor() {
}

SegmentResponse::~SegmentResponse() {
  // @@protoc_insertion_point(destructor:NLP.SegmentResponse)
  SharedDtor();
}

void SegmentResponse::SharedDtor() {
}

void SegmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SegmentResponse::descriptor() {
  ::protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SegmentResponse& SegmentResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fservice_2eproto::scc_info_SegmentResponse.base);
  return *internal_default_instance();
}


void SegmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NLP.SegmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SegmentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NLP.SegmentResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NLP.SegmentResult result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NLP.SegmentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NLP.SegmentResponse)
  return false;
#undef DO_
}

void SegmentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NLP.SegmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NLP.SegmentResult result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->result(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NLP.SegmentResponse)
}

::google::protobuf::uint8* SegmentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NLP.SegmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NLP.SegmentResult result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->result(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NLP.SegmentResponse)
  return target;
}

size_t SegmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NLP.SegmentResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NLP.SegmentResult result = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->result_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->result(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SegmentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NLP.SegmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SegmentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SegmentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NLP.SegmentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NLP.SegmentResponse)
    MergeFrom(*source);
  }
}

void SegmentResponse::MergeFrom(const SegmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NLP.SegmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_.MergeFrom(from.result_);
}

void SegmentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NLP.SegmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SegmentResponse::CopyFrom(const SegmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NLP.SegmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SegmentResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->result())) return false;
  return true;
}

void SegmentResponse::Swap(SegmentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SegmentResponse::InternalSwap(SegmentResponse* other) {
  using std::swap;
  CastToBase(&result_)->InternalSwap(CastToBase(&other->result_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SegmentResponse::GetMetadata() const {
  protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecallRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecallRequest::kTokensFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecallRequest::RecallRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fservice_2eproto::scc_info_RecallRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NLP.RecallRequest)
}
RecallRequest::RecallRequest(const RecallRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tokens_(from.tokens_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NLP.RecallRequest)
}

void RecallRequest::SharedCtor() {
}

RecallRequest::~RecallRequest() {
  // @@protoc_insertion_point(destructor:NLP.RecallRequest)
  SharedDtor();
}

void RecallRequest::SharedDtor() {
}

void RecallRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecallRequest::descriptor() {
  ::protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecallRequest& RecallRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fservice_2eproto::scc_info_RecallRequest.base);
  return *internal_default_instance();
}


void RecallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NLP.RecallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tokens_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecallRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NLP.RecallRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string tokens = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tokens()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tokens(this->tokens_size() - 1).data(),
            static_cast<int>(this->tokens(this->tokens_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NLP.RecallRequest.tokens");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NLP.RecallRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NLP.RecallRequest)
  return false;
#undef DO_
}

void RecallRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NLP.RecallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string tokens = 1;
  for (int i = 0, n = this->tokens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tokens(i).data(), static_cast<int>(this->tokens(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NLP.RecallRequest.tokens");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->tokens(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NLP.RecallRequest)
}

::google::protobuf::uint8* RecallRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NLP.RecallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string tokens = 1;
  for (int i = 0, n = this->tokens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tokens(i).data(), static_cast<int>(this->tokens(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NLP.RecallRequest.tokens");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->tokens(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NLP.RecallRequest)
  return target;
}

size_t RecallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NLP.RecallRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string tokens = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tokens_size());
  for (int i = 0, n = this->tokens_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tokens(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecallRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NLP.RecallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecallRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecallRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NLP.RecallRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NLP.RecallRequest)
    MergeFrom(*source);
  }
}

void RecallRequest::MergeFrom(const RecallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NLP.RecallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tokens_.MergeFrom(from.tokens_);
}

void RecallRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NLP.RecallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecallRequest::CopyFrom(const RecallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NLP.RecallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecallRequest::IsInitialized() const {
  return true;
}

void RecallRequest::Swap(RecallRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecallRequest::InternalSwap(RecallRequest* other) {
  using std::swap;
  tokens_.InternalSwap(CastToBase(&other->tokens_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecallRequest::GetMetadata() const {
  protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecallResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecallResponse::kDocIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecallResponse::RecallResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fservice_2eproto::scc_info_RecallResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NLP.RecallResponse)
}
RecallResponse::RecallResponse(const RecallResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      docids_(from.docids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NLP.RecallResponse)
}

void RecallResponse::SharedCtor() {
}

RecallResponse::~RecallResponse() {
  // @@protoc_insertion_point(destructor:NLP.RecallResponse)
  SharedDtor();
}

void RecallResponse::SharedDtor() {
}

void RecallResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecallResponse::descriptor() {
  ::protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecallResponse& RecallResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fservice_2eproto::scc_info_RecallResponse.base);
  return *internal_default_instance();
}


void RecallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NLP.RecallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  docids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NLP.RecallResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 DocIds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_docids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_docids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NLP.RecallResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NLP.RecallResponse)
  return false;
#undef DO_
}

void RecallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NLP.RecallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 DocIds = 1;
  for (int i = 0, n = this->docids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->docids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NLP.RecallResponse)
}

::google::protobuf::uint8* RecallResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NLP.RecallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 DocIds = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->docids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NLP.RecallResponse)
  return target;
}

size_t RecallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NLP.RecallResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 DocIds = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->docids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->docids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecallResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NLP.RecallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RecallResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecallResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NLP.RecallResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NLP.RecallResponse)
    MergeFrom(*source);
  }
}

void RecallResponse::MergeFrom(const RecallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NLP.RecallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  docids_.MergeFrom(from.docids_);
}

void RecallResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NLP.RecallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecallResponse::CopyFrom(const RecallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NLP.RecallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecallResponse::IsInitialized() const {
  return true;
}

void RecallResponse::Swap(RecallResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecallResponse::InternalSwap(RecallResponse* other) {
  using std::swap;
  docids_.InternalSwap(&other->docids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecallResponse::GetMetadata() const {
  protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SortRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SortRequest::kCutResultFieldNumber;
const int SortRequest::kDocIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SortRequest::SortRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fservice_2eproto::scc_info_SortRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NLP.SortRequest)
}
SortRequest::SortRequest(const SortRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      cut_result_(from.cut_result_),
      docids_(from.docids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NLP.SortRequest)
}

void SortRequest::SharedCtor() {
}

SortRequest::~SortRequest() {
  // @@protoc_insertion_point(destructor:NLP.SortRequest)
  SharedDtor();
}

void SortRequest::SharedDtor() {
}

void SortRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SortRequest::descriptor() {
  ::protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SortRequest& SortRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fservice_2eproto::scc_info_SortRequest.base);
  return *internal_default_instance();
}


void SortRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NLP.SortRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cut_result_.Clear();
  docids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SortRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NLP.SortRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NLP.SegmentResult cut_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cut_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 DocIds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_docids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_docids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NLP.SortRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NLP.SortRequest)
  return false;
#undef DO_
}

void SortRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NLP.SortRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NLP.SegmentResult cut_result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cut_result_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->cut_result(static_cast<int>(i)),
      output);
  }

  // repeated int32 DocIds = 2;
  for (int i = 0, n = this->docids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->docids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NLP.SortRequest)
}

::google::protobuf::uint8* SortRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NLP.SortRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NLP.SegmentResult cut_result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cut_result_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->cut_result(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 DocIds = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->docids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NLP.SortRequest)
  return target;
}

size_t SortRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NLP.SortRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NLP.SegmentResult cut_result = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->cut_result_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cut_result(static_cast<int>(i)));
    }
  }

  // repeated int32 DocIds = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->docids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->docids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SortRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NLP.SortRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SortRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SortRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NLP.SortRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NLP.SortRequest)
    MergeFrom(*source);
  }
}

void SortRequest::MergeFrom(const SortRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NLP.SortRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cut_result_.MergeFrom(from.cut_result_);
  docids_.MergeFrom(from.docids_);
}

void SortRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NLP.SortRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SortRequest::CopyFrom(const SortRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NLP.SortRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SortRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->cut_result())) return false;
  return true;
}

void SortRequest::Swap(SortRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SortRequest::InternalSwap(SortRequest* other) {
  using std::swap;
  CastToBase(&cut_result_)->InternalSwap(CastToBase(&other->cut_result_));
  docids_.InternalSwap(&other->docids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SortRequest::GetMetadata() const {
  protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SortResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SortResponse::kDocIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SortResponse::SortResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fservice_2eproto::scc_info_SortResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NLP.SortResponse)
}
SortResponse::SortResponse(const SortResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      docids_(from.docids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NLP.SortResponse)
}

void SortResponse::SharedCtor() {
}

SortResponse::~SortResponse() {
  // @@protoc_insertion_point(destructor:NLP.SortResponse)
  SharedDtor();
}

void SortResponse::SharedDtor() {
}

void SortResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SortResponse::descriptor() {
  ::protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SortResponse& SortResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fservice_2eproto::scc_info_SortResponse.base);
  return *internal_default_instance();
}


void SortResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NLP.SortResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  docids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SortResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NLP.SortResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 DocIds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_docids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_docids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NLP.SortResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NLP.SortResponse)
  return false;
#undef DO_
}

void SortResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NLP.SortResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 DocIds = 1;
  for (int i = 0, n = this->docids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->docids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NLP.SortResponse)
}

::google::protobuf::uint8* SortResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NLP.SortResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 DocIds = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->docids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NLP.SortResponse)
  return target;
}

size_t SortResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NLP.SortResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 DocIds = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->docids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->docids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SortResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NLP.SortResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SortResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SortResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NLP.SortResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NLP.SortResponse)
    MergeFrom(*source);
  }
}

void SortResponse::MergeFrom(const SortResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NLP.SortResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  docids_.MergeFrom(from.docids_);
}

void SortResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NLP.SortResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SortResponse::CopyFrom(const SortResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NLP.SortResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SortResponse::IsInitialized() const {
  return true;
}

void SortResponse::Swap(SortResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SortResponse::InternalSwap(SortResponse* other) {
  using std::swap;
  docids_.InternalSwap(&other->docids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SortResponse::GetMetadata() const {
  protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

SegmentService::~SegmentService() {}

const ::google::protobuf::ServiceDescriptor* SegmentService::descriptor() {
  protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_base_5fservice_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* SegmentService::GetDescriptor() {
  return descriptor();
}

void SegmentService::cut(::google::protobuf::RpcController* controller,
                         const ::NLP::SegmentRequest*,
                         ::NLP::SegmentResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method cut() not implemented.");
  done->Run();
}

void SegmentService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_base_5fservice_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      cut(controller,
             ::google::protobuf::down_cast<const ::NLP::SegmentRequest*>(request),
             ::google::protobuf::down_cast< ::NLP::SegmentResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& SegmentService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::NLP::SegmentRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& SegmentService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::NLP::SegmentResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

SegmentService_Stub::SegmentService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
SegmentService_Stub::SegmentService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
SegmentService_Stub::~SegmentService_Stub() {
  if (owns_channel_) delete channel_;
}

void SegmentService_Stub::cut(::google::protobuf::RpcController* controller,
                              const ::NLP::SegmentRequest* request,
                              ::NLP::SegmentResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

RecallService::~RecallService() {}

const ::google::protobuf::ServiceDescriptor* RecallService::descriptor() {
  protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_base_5fservice_2eproto::file_level_service_descriptors[1];
}

const ::google::protobuf::ServiceDescriptor* RecallService::GetDescriptor() {
  return descriptor();
}

void RecallService::recall(::google::protobuf::RpcController* controller,
                         const ::NLP::RecallRequest*,
                         ::NLP::RecallResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method recall() not implemented.");
  done->Run();
}

void RecallService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_base_5fservice_2eproto::file_level_service_descriptors[1]);
  switch(method->index()) {
    case 0:
      recall(controller,
             ::google::protobuf::down_cast<const ::NLP::RecallRequest*>(request),
             ::google::protobuf::down_cast< ::NLP::RecallResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& RecallService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::NLP::RecallRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& RecallService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::NLP::RecallResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

RecallService_Stub::RecallService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
RecallService_Stub::RecallService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
RecallService_Stub::~RecallService_Stub() {
  if (owns_channel_) delete channel_;
}

void RecallService_Stub::recall(::google::protobuf::RpcController* controller,
                              const ::NLP::RecallRequest* request,
                              ::NLP::RecallResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

SortService::~SortService() {}

const ::google::protobuf::ServiceDescriptor* SortService::descriptor() {
  protobuf_base_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_base_5fservice_2eproto::file_level_service_descriptors[2];
}

const ::google::protobuf::ServiceDescriptor* SortService::GetDescriptor() {
  return descriptor();
}

void SortService::sort(::google::protobuf::RpcController* controller,
                         const ::NLP::SortRequest*,
                         ::NLP::SortResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method sort() not implemented.");
  done->Run();
}

void SortService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_base_5fservice_2eproto::file_level_service_descriptors[2]);
  switch(method->index()) {
    case 0:
      sort(controller,
             ::google::protobuf::down_cast<const ::NLP::SortRequest*>(request),
             ::google::protobuf::down_cast< ::NLP::SortResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& SortService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::NLP::SortRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& SortService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::NLP::SortResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

SortService_Stub::SortService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
SortService_Stub::SortService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
SortService_Stub::~SortService_Stub() {
  if (owns_channel_) delete channel_;
}

void SortService_Stub::sort(::google::protobuf::RpcController* controller,
                              const ::NLP::SortRequest* request,
                              ::NLP::SortResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace NLP
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NLP::SegmentResult* Arena::CreateMaybeMessage< ::NLP::SegmentResult >(Arena* arena) {
  return Arena::CreateInternal< ::NLP::SegmentResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NLP::SegmentRequest* Arena::CreateMaybeMessage< ::NLP::SegmentRequest >(Arena* arena) {
  return Arena::CreateInternal< ::NLP::SegmentRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NLP::SegmentResponse* Arena::CreateMaybeMessage< ::NLP::SegmentResponse >(Arena* arena) {
  return Arena::CreateInternal< ::NLP::SegmentResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NLP::RecallRequest* Arena::CreateMaybeMessage< ::NLP::RecallRequest >(Arena* arena) {
  return Arena::CreateInternal< ::NLP::RecallRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NLP::RecallResponse* Arena::CreateMaybeMessage< ::NLP::RecallResponse >(Arena* arena) {
  return Arena::CreateInternal< ::NLP::RecallResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NLP::SortRequest* Arena::CreateMaybeMessage< ::NLP::SortRequest >(Arena* arena) {
  return Arena::CreateInternal< ::NLP::SortRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NLP::SortResponse* Arena::CreateMaybeMessage< ::NLP::SortResponse >(Arena* arena) {
  return Arena::CreateInternal< ::NLP::SortResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
